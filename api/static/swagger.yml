swagger: "2.0"
info:
  version: "1.0.0"
  title: Swagger CompSigh
  description: |-
    API for [CompSigh](http://localhost:3000)

    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
    Consectetur libero id faucibus nisl tincidunt eget nullam non nisi. Hendrerit dolor magna eget est lorem ipsum.
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
host: localhost:8080
basePath: /api
schemes:
  - http
securityDefinitions:
  JWT:
    type: apiKey
    name: Authorization
    in: header
    description: 'Authorization header: "Bearer [token]"'
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
tags:
  - name: auth
  - name: user
  - name: checkin
  - name: task
  - name: category
  - name: xplevel
  - name: healthcheck
paths:
  /ping:
    get:
      tags:
        - healthcheck
      summary: Ping the server
      produces:
        - text/plain
      responses:
        200:
          description: Success - Server is up and running
          schema:
            type: string
            example: pong
        5xx:
          description: Unknown Error
          schema:
            $ref: "#/definitions/Error"
  /category:
    get:
      tags:
        - category
      summary: Get all categories
      produces:
        - "application/json"
      responses:
        200:
          description: Success - Returns Category[]
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Category"
        5xx:
          description: Unknown Error
          schema:
            $ref: "#/definitions/Error"
  /xplevel:
    get:
      tags:
        - xplevel
      summary: Get all xplevels
      produces:
        - "application/json"
      responses:
        200:
          description: Success - Returns XpLevel[]
          schema:
            type: array
            items:
              $ref: "#/definitions/XpLevel"
        5xx:
          description: Unknown Error
          schema:
            $ref: "#/definitions/Error"
  /auth/signin:
    post:
      tags:
        - auth
      summary: Sign in
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: body
          description: SignInRequest
          required: true
          schema:
            $ref: "#/definitions/SignInRequest"
      responses:
        200:
          description: Success - Returns AuthResponse
          schema:
            $ref: "#/definitions/AuthResponse"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        5xx:
          description: Unknown Error
          schema:
            $ref: "#/definitions/Error"
  /auth/signup:
    post:
      tags:
        - auth
      summary: Sign up
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: body
          description: SignUpRequest
          required: true
          schema:
            $ref: "#/definitions/SignUpRequest"
      responses:
        201:
          description: Success - No Response Data
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        5xx:
          description: Unknown Error
          schema:
            $ref: "#/definitions/Error"
  /auth/refresh:
    post:
      tags:
        - auth
      summary: Refresh token
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - JWT: []
      parameters:
        - in: body
          name: body
          description: RefreshTokenRequest
          required: true
          schema:
            $ref: "#/definitions/RefreshTokenRequest"
      responses:
        200:
          description: Success - Returns RefreshTokenResponse
          schema:
            $ref: "#/definitions/RefreshTokenResponse"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        5xx:
          description: Unknown Error
          schema:
            $ref: "#/definitions/Error"
  /auth/email/verify:
    post:
      tags:
        - auth
      summary: Verify email
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: body
          description: VerifyEmailRequest
          required: true
          schema:
            $ref: "#/definitions/VerifyEmailRequest"
      responses:
        200:
          description: Success - Returns AuthResponse
          schema:
            $ref: "#/definitions/AuthResponse"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        5xx:
          description: Unknown Error
          schema:
            $ref: "#/definitions/Error"
  /auth/password/forgot:
    post:
      tags:
        - auth
      summary: Forgot password
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: body
          description: ForgotPasswordRequest
          required: true
          schema:
            $ref: "#/definitions/ForgotPasswordRequest"
      responses:
        204:
          description: Success - No Response Data
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        5xx:
          description: Unknown Error
          schema:
            $ref: "#/definitions/Error"
  /auth/password/reset:
    post:
      tags:
        - auth
      summary: Reset password
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: body
          description: ResetPasswordRequest
          required: true
          schema:
            $ref: "#/definitions/ResetPasswordRequest"
      responses:
        204:
          description: Success - No Response Data
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        5xx:
          description: Unknown Error
          schema:
            $ref: "#/definitions/Error"
  /user:
    get:
      tags:
        - user
      summary: Get current user
      produces:
        - "application/json"
      security:
        - JWT: []
      responses:
        200:
          description: Success - Returns UserDTO
          schema:
            $ref: "#/definitions/UserDTO"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        404:
          description: Not Found
          schema:
            $ref: "#/definitions/Error"
        5xx:
          description: Unknown Error
          schema:
            $ref: "#/definitions/Error"
    delete:
      tags:
        - user
      summary: Delete current user account
      produces:
        - "application/json"
      security:
        - JWT: []
      parameters:
        - in: body
          name: body
          description: DeleteUserRequest
          required: true
          schema:
            $ref: "#/definitions/DeleteUserRequest"
      responses:
        204:
          description: Success - No Response Data
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/Error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        404:
          description: Not Found
          schema:
            $ref: "#/definitions/Error"
        5xx:
          description: Unknown Error
          schema:
            $ref: "#/definitions/Error"
  /user/password:
    patch:
      tags:
        - user
      summary: Change current user password
      produces:
        - "application/json"
      security:
        - JWT: []
      parameters:
        - in: body
          name: body
          description: ChangePasswordRequest
          required: true
          schema:
            $ref: "#/definitions/ChangePasswordRequest"
      responses:
        204:
          description: Success - No Response Data
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        404:
          description: Not Found
          schema:
            $ref: "#/definitions/Error"
        5xx:
          description: Unknown Error
          schema:
            $ref: "#/definitions/Error"
  /checkin:
    get:
      tags:
        - checkin
      summary: Get paginated checkIns
      produces:
        - "application/json"
      security:
        - JWT: []
      parameters:
        - in: query
          name: page
          type: integer
          required: false
          description: Page number (starting at 1), if not specified, ALL checkIns will be returned
          default: 1
        - in: query
          name: size
          type: integer
          required: false
          description: Page size, defaults to 31
          default: 31
      responses:
        200:
          description: Success - Returns CheckInDTO[]
          schema:
            type: array
            items:
              $ref: "#/definitions/CheckInDTO"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        5xx:
          description: Unknown Error
          schema:
            $ref: "#/definitions/Error"
    post:
      tags:
        - checkin
      summary: Create checkIn
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - JWT: []
      parameters:
        - in: body
          name: body
          description: CreateCheckInRequest
          required: true
          schema:
            $ref: "#/definitions/CreateCheckInRequest"
      responses:
        201:
          description: Success - Returns CheckInDTO
          schema:
            $ref: "#/definitions/CheckInDTO"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        5xx:
          description: Unknown Error
          schema:
            $ref: "#/definitions/Error"
  /checkin/{checkInId}:
    get:
      tags:
        - checkin
      summary: Get checkIn by id
      produces:
        - "application/json"
      security:
        - JWT: []
      parameters:
        - in: path
          name: checkInId
          description: checkInId
          required: true
          type: string
      responses:
        200:
          description: Success - Returns CheckInDTO
          schema:
            $ref: "#/definitions/CheckInDTO"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        404:
          description: Not Found
          schema:
            $ref: "#/definitions/Error"
        5xx:
          description: Unknown Error
          schema:
            $ref: "#/definitions/Error"
  /task:
    get:
      tags:
        - task
      summary: Get tasks by completed status
      produces:
        - "application/json"
      security:
        - JWT: []
      parameters:
        - in: query
          name: completed
          type: boolean
          required: false
          description: Completed status, if not specified, ALL tasks will be returned
      responses:
        200:
          description: Success - Returns TaskDTO[]
          schema:
            type: array
            items:
              $ref: "#/definitions/TaskDTO"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        5xx:
          description: Unknown Error
          schema:
            $ref: "#/definitions/Error"
    post:
      tags:
        - task
      summary: Create task
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - JWT: []
      parameters:
        - in: body
          name: body
          description: CreateTaskRequest
          required: true
          schema:
            $ref: "#/definitions/CreateTaskRequest"
      responses:
        201:
          description: Success - Returns TaskDTO
          schema:
            $ref: "#/definitions/TaskDTO"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        5xx:
          description: Unknown Error
          schema:
            $ref: "#/definitions/Error"
  /task/{taskId}:
    get:
      tags:
        - task
      summary: Get task by id
      produces:
        - "application/json"
      security:
        - JWT: []
      parameters:
        - in: path
          name: taskId
          schema:
            type: number
            format: int64
          required: true
          description: taskId
      responses:
        200:
          description: Success - Returns TaskDTO
          schema:
            $ref: "#/definitions/TaskDTO"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        403:
          description: Forbidden
          schema:
            $ref: "#/definitions/Error"
        404:
          description: Not Found
          schema:
            $ref: "#/definitions/Error"
        5xx:
          description: Unknown Error
          schema:
            $ref: "#/definitions/Error"
    put:
      tags:
        - task
      summary: Update task
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - JWT: []
      parameters:
        - in: path
          name: taskId
          schema:
            type: number
            format: int64
          required: true
          description: taskId
        - in: body
          name: body
          description: UpdateTaskRequest
          required: true
          schema:
            $ref: "#/definitions/UpdateTaskRequest"
      responses:
        200:
          description: Success - Returns TaskDTO
          schema:
            $ref: "#/definitions/TaskDTO"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        403:
          description: Forbidden
          schema:
            $ref: "#/definitions/Error"
        404:
          description: Not Found
          schema:
            $ref: "#/definitions/Error"
        5xx:
          description: Unknown Error
          schema:
            $ref: "#/definitions/Error"
    delete:
      tags:
        - task
      summary: Delete task
      produces:
        - "application/json"
      security:
        - JWT: []
      parameters:
        - in: path
          name: taskId
          schema:
            type: number
            format: int64
          required: true
          description: taskId
      responses:
        204:
          description: Success - No Response Data
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        403:
          description: Forbidden
          schema:
            $ref: "#/definitions/Error"
        404:
          description: Not Found
          schema:
            $ref: "#/definitions/Error"
        5xx:
          description: Unknown Error
          schema:
            $ref: "#/definitions/Error"
  /task/{taskId}/complete:
    patch:
      tags:
        - task
      summary: Update task completed status
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - JWT: []
      parameters:
        - in: path
          name: taskId
          schema:
            type: number
            format: int64
          required: true
          description: taskId
        - in: body
          name: body
          description: UpdateTaskCompletedStatusRequest
          required: true
          schema:
            $ref: "#/definitions/UpdateTaskCompletedStatusRequest"
      responses:
        200:
          description: Success - Returns TaskDTO
          schema:
            $ref: "#/definitions/TaskDTO"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        403:
          description: Forbidden
          schema:
            $ref: "#/definitions/Error"
        404:
          description: Not Found
          schema:
            $ref: "#/definitions/Error"
        5xx:
          description: Unknown Error
          schema:
            $ref: "#/definitions/Error"
definitions:
  UserDTO:
    type: object
    required:
      - userId
      - userName
      - firstName
      - lastName
      - email
      - categoryId
      - categoryName
      - xpLevelId
      - xpLevelName
    properties:
      userId:
        type: integer
        format: int64
      userName:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      categoryId:
        type: integer
        format: int64
      categoryName:
        type: string
      xpLevelId:
        type: integer
        format: int64
      xpLevelName:
        type: string
  CheckInDTO:
    type: object
    required:
      - checkInId
      - answer2
      - answer3
      - answer4
      - checkInStatus
    properties:
      checkInId:
        type: integer
        format: int64
      answer2:
        type: string
      answer3:
        type: string
      answer4:
        type: string
      comments:
        type: string
      checkInStatus:
        type: string
        enum:
          - GOOD
          - NEUTRAL
          - BAD
  TaskDTO:
    type: object
    required:
      - taskId
      - taskName
      - taskDescription
      - completed
    properties:
      taskId:
        type: integer
        format: int64
      taskName:
        type: string
      taskDescription:
        type: string
      completed:
        type: boolean
        default: false
  Category:
    type: object
    required:
      - categoryId
      - categoryName
    properties:
      categoryId:
        type: integer
        format: int64
      categoryName:
        type: string
  XpLevel:
    type: object
    required:
      - xpLevelId
      - xpLevelname
    properties:
      xpLevelId:
        type: integer
        format: int64
      xpLevelname:
        type: string
  SignInRequest:
    type: object
    required:
      - email
      - password
    properties:
      email:
        type: string
      password:
        type: string
  SignUpRequest:
    type: object
    required:
      - firstName
      - lastName
      - userName
      - email
      - password
      - categoryId
      - xpLevelId
    properties:
      userName:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      password:
        type: string
      categoryId:
        type: integer
        format: int64
      xpLevelId:
        type: integer
        format: int64
  RefreshTokenRequest:
    type: object
    required:
      - refreshToken
    properties:
      refreshToken:
        type: string
  AuthResponse:
    type: object
    required:
      - accessToken
      - refreshToken
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
  RefreshTokenResponse:
    type: object
    required:
      - accessToken
    properties:
      accessToken:
        type: string
  VerifyEmailRequest:
    type: object
    required:
      - email
      - code
    properties:
      email:
        type: string
      code:
        type: string
  ForgotPasswordRequest:
    type: object
    required:
      - email
    properties:
      email:
        type: string
  ResetPasswordRequest:
    type: object
    required:
      - email
      - password
      - repeatPassword
      - code
    properties:
      email:
        type: string
      password:
        type: string
      repeatPassword:
        type: string
      code:
        type: string
  DeleteUserRequest:
    type: object
    required:
      - userName
    properties:
      userName:
        type: string
  ChangePasswordRequest:
    type: object
    required:
      - email
      - oldPassword
      - password
      - repeatPassword
    properties:
      email:
        type: string
      oldPassword:
        type: string
      password:
        type: string
      repeatPassword:
        type: string
  CreateCheckInRequest:
    type: object
    required:
      - answer2
      - answer3
      - answer4
    properties:
      answer2:
        type: string
      answer3:
        type: string
      answer4:
        type: string
      comments:
        type: string
      checkInStatus:
        type: string
        enum:
          - GOOD
          - NEUTRAL
          - BAD
  CreateTaskRequest:
    type: object
    required:
      - taskName
      - taskDescription
    properties:
      taskName:
        type: string
      taskDescription:
        type: string
  UpdateTaskRequest:
    type: object
    required:
      - taskName
      - taskDescription
      - completed
    properties:
      taskName:
        type: string
      taskDescription:
        type: string
      completed:
        type: boolean
        default: false
  UpdateTaskCompletedStatusRequest:
    type: object
    required:
      - completed
    properties:
      completed:
        type: boolean
        default: false
  Error:
    type: object
    required:
      - error
    properties:
      error:
        type: string
