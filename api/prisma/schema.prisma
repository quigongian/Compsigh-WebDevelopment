datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model Category {
    category_id    Int             @id @default(autoincrement())
    category_name  String          @unique
    generatedTasks GeneratedTask[]
    users          User[]
}

model XpLevel {
    xpLevel_id     Int             @id @default(autoincrement())
    xpLevel_name   String          @unique
    generatedTasks GeneratedTask[]
    users          User[]
}

model GeneratedTask {
    generatedtask_id          Int      @id @default(autoincrement())
    generatedtask_name        String
    generatedtask_description String
    category                  Category @relation(fields: [category_id], references: [category_id])
    category_id               Int
    xpLevel                   XpLevel  @relation(fields: [xpLevel_id], references: [xpLevel_id])
    xpLevel_id                Int
}

model User {
    user_id      Int      @id @default(autoincrement())
    firstName    String
    lastName     String
    userName     String   @unique
    email        String   @unique
    password     String
    category     Category @relation(fields: [category_id], references: [category_id])
    category_id  Int
    xpLevel      XpLevel  @relation(fields: [xpLevel_id], references: [xpLevel_id])
    xpLevel_id   Int
    tasks        Task[]
    date_created DateTime @default(now())
}

model Task {
    task_id          Int       @id @default(autoincrement())
    task_name        String
    task_description String
    user             User      @relation(fields: [user_id], references: [user_id])
    user_id          Int
    completed        Boolean   @default(false)
    date_created     DateTime  @default(now())
    date_completed   DateTime?
}

// npx prisma migrate dev
// npx prisma migrate reset
// npx prisma db seed
